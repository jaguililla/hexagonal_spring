
stages:
  - build
  - release

services:
  - name: docker:dind
    command:
      - '--tls=false'

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ''
  DOCKER_DRIVER: overlay2
  MAVEN_OPTS: -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository

build:
  stage: build
  image: ubuntu:24.04
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
  cache:
    key: build-cache
    paths:
      - .m2/repository
  before_script:
    - apt update
    - apt -y install curl zip unzip
    - curl -s "https://get.sdkman.io?rcupdate=false" | bash
    - source "$HOME/.sdkman/bin/sdkman-init.sh"
  script:
    - sdk env install
    - ./mvnw

release:
  stage: release
  image: ubuntu:24.04
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
    - apt update
    - apt -y install curl zip unzip
    - curl -s "https://get.sdkman.io?rcupdate=false" | bash
    - source "$HOME/.sdkman/bin/sdkman-init.sh"
  script:
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#    - docker build -t $CI_REGISTRY/group/project/image:latest .
#    - docker push $CI_REGISTRY/group/project/image:latest
    - sdk env install
    - ./mvnw -B -P release
    - export CLIENT_PATH='target/generated-sources/openapi'
    - export CONTROLLERS_PATH='com/github/jaguililla/appointments/http/controllers'
    - export REPOSITORY='https://maven.pkg.github.com/jaguililla/hexagonal_spring'
    - export ALT_REPOSITORY="altDeploymentRepository=github::default::${REPOSITORY}"
    - rm -rf "${CLIENT_PATH}/src/main/java/${CONTROLLERS_PATH}"
    - mvn -f "${CLIENT_PATH}/pom.xml" -B -D ${ALT_REPOSITORY} clean deploy
