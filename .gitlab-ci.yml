
stages:
  - build
  - release

services:
  - name: docker:dind
    command:
      - '--tls=false'

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ''
  DOCKER_DRIVER: overlay2
  MAVEN_OPTS: -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository

build:
  stage: build
  image: ubuntu:24.04
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
  cache:
    key: build-cache
    paths:
      - .m2/repository
  before_script:
    - apt update
    - apt -y install curl zip unzip
    - curl -s "https://get.sdkman.io?rcupdate=false" | bash
    - source "$HOME/.sdkman/bin/sdkman-init.sh"
  script:
    - sdk env install
    - ./mvnw

publish:
  stage: release
  image: maven:3
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
    - apt update
    - apt -y install curl zip unzip
    - curl -s "https://get.sdkman.io?rcupdate=false" | bash
    - source "$HOME/.sdkman/bin/sdkman-init.sh"
  script:
    - sdk env install
    - export REGISTRY_USERNAME="${CI_REGISTRY_USER}"
    - export REGISTRY_PASSWORD="${CI_REGISTRY_PASSWORD}"
    - export CLIENT_PATH='target/generated-sources/openapi'
    - export CONTROLLERS_PATH='com/github/jaguililla/appointments/http/controllers'
    - export REPOSITORY="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/maven"
    - export ALT_REPOSITORY="altDeploymentRepository=gitlab::default::${REPOSITORY}"
    - export IMG_REGISTRY="image.registry=${CI_REGISTRY}/jaguililla/hexagonal_spring"
    - export POM_VERSION="$(mvn help:evaluate -D expression=project.version -q -D forceStdout)"
    - export CI_PUBLISH="spring-boot.build-image.publish=true"
    - export MAVEN_ARGS="--quiet --batch-mode --settings .mvn/ci_settings.xml"
    - ./mvnw -D ${ALT_REPOSITORY} -D ${IMG_REGISTRY} -D ${CI_PUBLISH} deploy
    - rm -rf "${CLIENT_PATH}/src/main/java/${CONTROLLERS_PATH}"
    - mvn -f "${CLIENT_PATH}/pom.xml" -D ${ALT_REPOSITORY} clean deploy
    - echo "POM_VERSION=${POM_VERSION}" >> variables.env
  artifacts:
    reports:
      dotenv: variables.env

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: publish
      artifacts: true
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - echo "Release version ${POM_VERSION}"
  release:
    tag_name: ${POM_VERSION}
    description: Release ${POM_VERSION}
