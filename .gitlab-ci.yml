
stages:
  - build
  - release

services:
  - name: docker:dind
    command:
      - '--tls=false'

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ''
  DOCKER_DRIVER: overlay2
  MAVEN_OPTS: -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository

build:
  stage: build
  image: ubuntu:24.04
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
  cache:
    key: build-cache
    paths:
      - .m2/repository
  before_script:
    - apt update
    - apt -y install curl zip unzip
    - curl -s "https://get.sdkman.io?rcupdate=false" | bash
    - source "$HOME/.sdkman/bin/sdkman-init.sh"
  script:
    - sdk env install
    - ./mvnw

release:
  stage: release
  image: ubuntu:24.04
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
    - apt update
    - apt -y install curl zip unzip
    - curl -s "https://get.sdkman.io?rcupdate=false" | bash
    - source "$HOME/.sdkman/bin/sdkman-init.sh"
  script:
    - sdk env install
    - export REGISTRY_USERNAME="${CI_REGISTRY_USER}"
    - export REGISTRY_PASSWORD="${CI_REGISTRY_PASSWORD}"
    - export CLIENT_PATH='target/generated-sources/openapi'
    - export CONTROLLERS_PATH='com/github/jaguililla/appointments/http/controllers'
    - export REPOSITORY='https://gitlab.com/api/v4/projects/jaguililla/hexagonal_spring/packages/maven'
    - export ALT_REPOSITORY="altDeploymentRepository=github::default::${REPOSITORY}"
    - export IMG_REGISTRY="${CI_REGISTRY}/jaguililla/hexagonal_spring"
    - ./mvnw -D ${ALT_REPOSITORY} -D image.registry=${IMG_REGISTRY} -B -P publish
    - rm -rf "${CLIENT_PATH}/src/main/java/${CONTROLLERS_PATH}"
    - mvn -f "${CLIENT_PATH}/pom.xml" -B -D ${ALT_REPOSITORY} clean deploy
  release:
    tag_name: tag
    description: Description TODO
