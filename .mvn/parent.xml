<?xml version="1.0" encoding="UTF-8"?>

<!--
 ! Common settings for `pom.xml`, it could be moved to its own repository to be reused.
 !-->
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation=
    "http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.4.1</version>
    <relativePath/>
  </parent>

  <groupId>com.github.jaguililla</groupId>
  <artifactId>parent</artifactId>
  <version>0.1.0</version>
  <packaging>pom</packaging>

  <name>Parent</name>
  <description>Common Maven settings (excluding DB and messaging)</description>

  <properties>
    <maven>3.9.9</maven>
    <openApiNullable>false</openApiNullable>
    <openapi.package>${project.groupId}.${project.artifactId}.http</openapi.package>
    <controllers.package>${openapi.package}.controllers</controllers.package>
    <client.package>${openapi.package}.client</client.package>
    <image.name>${project.groupId}/${project.artifactId}</image.name>
    <image.registry>docker.io</image.registry>
    <spring.server>undertow</spring.server> <!-- undertow | jetty | tomcat -->
    <openapi.integration>ui</openapi.integration> <!-- ui | api -->

    <java.version>21</java.version>
    <springdoc.openapi.version>2.7.0</springdoc.openapi.version>
    <openapi.generator.version>7.10.0</openapi.generator.version>

    <jacoco.version>0.8.12</jacoco.version>
    <archunit.version>1.3.0</archunit.version>
    <gatling.version>3.13.1</gatling.version>
    <gatling.maven.version>4.12.2</gatling.maven.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-${spring.server}</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webmvc-${openapi.integration}</artifactId>
      <version>${springdoc.openapi.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.tngtech.archunit</groupId>
      <artifactId>archunit-junit5</artifactId>
      <version>${archunit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>kafka</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.gatling.highcharts</groupId>
      <artifactId>gatling-charts-highcharts</artifactId>
      <version>${gatling.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>verify</defaultGoal>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <compilerArgs>--enable-preview</compilerArgs>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>${openapi.generator.version}</version>

        <configuration>
          <inputSpec>${project.basedir}/src/main/resources/openapi/api.yml</inputSpec>
          <!-- Tests are generated using JUnit 4, they will fail -->
          <generateApiTests>false</generateApiTests>
          <generateModelTests>false</generateModelTests>
          <typeMappings>
            <typeMapping>DateTime=LocalDateTime</typeMapping>
            <typeMapping>Time=LocalTime</typeMapping>
          </typeMappings>
          <importMappings>
            <importMapping>LocalDateTime=java.time.LocalDateTime</importMapping>
            <importMapping>LocalTime=java.time.LocalTime</importMapping>
          </importMappings>
        </configuration>

        <executions>
          <execution>
            <id>server</id>
            <goals>
              <goal>generate</goal>
            </goals>

            <configuration>
              <generatorName>spring</generatorName>
              <library>spring-boot</library>

              <apiPackage>${controllers.package}</apiPackage>
              <modelPackage>${controllers.package}.messages</modelPackage>

              <configOptions>
                <useJakartaEe>true</useJakartaEe>
                <interfaceOnly>true</interfaceOnly>
                <useSpringBoot3>true</useSpringBoot3>
                <useSwaggerUI>true</useSwaggerUI>
                <skipDefaultInterface>true</skipDefaultInterface>
                <openApiNullable>${openApiNullable}</openApiNullable>
              </configOptions>
            </configuration>
          </execution>

          <execution>
            <id>client</id>
            <goals>
              <goal>generate</goal>
            </goals>

            <configuration>
              <generatorName>java</generatorName>
              <library>native</library>

              <apiPackage>${client.package}</apiPackage>
              <modelPackage>${client.package}.messages</modelPackage>

              <configOptions>
                <useJakartaEe>true</useJakartaEe>
                <openApiNullable>${openApiNullable}</openApiNullable>
                <groupId>${project.groupId}</groupId>
                <artifactId>${project.artifactId}-client</artifactId>
                <artifactVersion>${project.version}</artifactVersion>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>jackson-nullable</id>

      <properties>
        <openApiNullable>true</openApiNullable>
      </properties>

      <dependencies>
        <dependency>
          <groupId>org.openapitools</groupId>
          <artifactId>jackson-databind-nullable</artifactId>
          <!-- TODO -->
          <version>0.2.6</version>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>pitest</id>

      <properties>
        <pitest.classes>${project.groupId}.${project.artifactId}.domain.*</pitest.classes>
      </properties>

      <build>
        <plugins>
          <plugin>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-maven</artifactId>
            <!-- TODO -->
            <version>1.17.3</version>
            <dependencies>
              <dependency>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-junit5-plugin</artifactId>
                <!-- TODO -->
                <version>1.2.1</version>
              </dependency>
            </dependencies>
            <configuration>
              <timeoutConstant>30000</timeoutConstant>
              <targetClasses>
                <param>${pitest.classes}</param>
              </targetClasses>
              <targetTests>
                <param>${pitest.classes}</param>
              </targetTests>
              <features>
                <!-- Required to process Java records, generates false positives -->
                <feature>-frecord</feature>
              </features>
              <verbose>true</verbose>
            </configuration>
            <executions>
              <execution>
                <phase>verify</phase>
                <goals>
                  <goal>mutationCoverage</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>checkstyle</id>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <!-- TODO -->
            <version>3.6.0</version>
            <configuration>
              <failsOnError>true</failsOnError>
            </configuration>
            <executions>
              <execution>
                <id>validate</id>
                <phase>validate</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>

      <reporting>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <!-- TODO -->
            <version>3.6.0</version>
            <reportSets>
              <reportSet>
                <reports>
                  <report>checkstyle</report>
                </reports>
              </reportSet>
            </reportSets>
          </plugin>
        </plugins>
      </reporting>
    </profile>

    <profile>
      <id>gatling</id>

      <build>
        <defaultGoal>post-integration-test</defaultGoal>

        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <!-- TODO -->
            <version>3.5.0</version>
            <executions>
              <execution>
                <id>docker-up</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>pre-integration-test</phase>
                <configuration>
                  <executable>docker</executable>
                  <arguments>
                    <argument>compose</argument>
                    <argument>--profile=local</argument>
                    <argument>up</argument>
                    <argument>-d</argument>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>docker-down</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>post-integration-test</phase>
                <configuration>
                  <executable>docker</executable>
                  <arguments>
                    <argument>compose</argument>
                    <argument>--profile=local</argument>
                    <argument>rm</argument>
                    <argument>-sfv</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>io.gatling</groupId>
            <artifactId>gatling-maven-plugin</artifactId>
            <version>${gatling.maven.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>test</goal>
                </goals>
                <phase>integration-test</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>buildpack</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <configuration>
              <docker>
                <publishRegistry>
                  <username>${env.REGISTRY_USERNAME}</username>
                  <password>${env.REGISTRY_PASSWORD}</password>
                </publishRegistry>
              </docker>
              <image>
                <name>${image.registry}/${image.name}:${project.version}</name>
                <tags>
                  <tag>${image.registry}/${image.name}:latest</tag>
                </tags>
                <env>
                  <JAVA_TOOL_OPTIONS>
                    -XX:+AlwaysPreTouch -XX:+UseParallelGC -XX:+UseNUMA
                  </JAVA_TOOL_OPTIONS>
                  <BPL_SPRING_AOT_ENABLED>true</BPL_SPRING_AOT_ENABLED>
                  <BP_SPRING_AOT_ENABLED>true</BP_SPRING_AOT_ENABLED>
                  <BP_JVM_VERSION>${java.version}</BP_JVM_VERSION>
                </env>
              </image>
            </configuration>
            <executions>
              <execution>
                <id>image</id>
                <goals>
                  <goal>build-image</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
